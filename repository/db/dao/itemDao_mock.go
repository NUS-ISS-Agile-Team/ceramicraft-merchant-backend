// Code generated by MockGen. DO NOT EDIT.
// Source: ./repository/db/dao/itemDao.go

// Package dao is a generated GoMock package.
package dao

import (
	reflect "reflect"

	model "github.com/cerami-craft-shop/merchant-backend/repository/db/model"
	gomock "github.com/golang/mock/gomock"
)

// MockItemDao is a mock of ItemDao interface.
type MockItemDao struct {
	ctrl     *gomock.Controller
	recorder *MockItemDaoMockRecorder
}

// MockItemDaoMockRecorder is the mock recorder for MockItemDao.
type MockItemDaoMockRecorder struct {
	mock *MockItemDao
}

// NewMockItemDao creates a new mock instance.
func NewMockItemDao(ctrl *gomock.Controller) *MockItemDao {
	mock := &MockItemDao{ctrl: ctrl}
	mock.recorder = &MockItemDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockItemDao) EXPECT() *MockItemDaoMockRecorder {
	return m.recorder
}

// GetItemList mocks base method.
func (m *MockItemDao) GetItemList() ([]*model.Item, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItemList")
	ret0, _ := ret[0].([]*model.Item)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetItemList indicates an expected call of GetItemList.
func (mr *MockItemDaoMockRecorder) GetItemList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItemList", reflect.TypeOf((*MockItemDao)(nil).GetItemList))
}
